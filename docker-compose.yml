services:
  postgres_db:
    image: postgres:16
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:5432'
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*'
    expose:
      - '${POSTGRES_PORT}'

  app:
    build: 
      context: .  
      dockerfile: Dockerfile
    ports:
      - '${PORT}:${PORT}'
    stdin_open: true
    tty: true
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      # Opcional: desativar migrações se necessário
      # SKIP_MIGRATIONS: "true"
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      DATABASE_URL: "${DATABASE_URL}"
      AUTH_URL: "${AUTH_URL}"
      AUTH_SECRET: "${AUTH_SECRET}"
      AUTH_TRUST_HOST: "${AUTH_TRUST_HOST}"
    networks:
      - prisma-network

networks:
  prisma-network:
    name: prisma-network

volumes:
  postgres_data: 